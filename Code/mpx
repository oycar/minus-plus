#!/bin/bash
# A shell script to wrap the awk aware preprocessor and awk and run the mpx command with simple arguments
# mpx.sh
# Copyright (C) 2018  Robert Whitehurst
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http:#www.gnu.org/licenses/>.

# A simple function to write a file
# We can write provided that it either doesn't exist or is writable
function wfile () {
  file=$1
  if [ -e ${file} ] && [ ! -w ${file} ]; then
    echo "Cannot write to file => ${file}" >&2
    exit 1
  fi
}

# Save current directory
current_directory=`pwd`

# set directory
MPXDIR=~/Cloudstation/Projects/Minus-Plus/Code

# Usage
USAGE="Usage: $(basename $0) [-a: show-account-transactions] [-c: journal-currency] [-e export-format] [-f: financial-year] [-i mpx-information-and-copyright-notice]\
 [-l: log-function] [-p: write-price-file] [-q: dividend-qualification-window] [-r: print-extra-report] [-s show-all-transactions]\
 [-v write-variable-1,write_variable-2,...] [-w: write-state-file] [-x show-extra-detail] [-z preprocess_only] <data-import-file> <state-file> <journal-file>"

# This is a simple front end for mpx
# it handles arguments and runs the preprocessor
# default arguments
account_name=""
date_format=""
Export_Format=0
financial_year=0
log_function=0
write_file=0
write_variables=""
preprocess_only=false
qualify_window=0
Show_All=0
Show_Extra=0
Show_Reports="z" # Default reports

# Default journal currency and type
journal_currency="AUD"
journal_type="PTY"

# A useful alias for an awk aware preprocessor
# This uses gpp
shopt -s expand_aliases
alias app='gpp -I /usr/local/share/awk -n -U "" "" "(" "," ")" "(" ")" "#" "" -M "\n@\w" "\n" " " " " "\n" "" "" +cccs "#" "\n" +c "\\\n" "" +s "\"" "\"" "\\"'

# logging is an array
while getopts ":a:c:ef:F:il:p:q:r:sv:w:xz" opt; do
    case $opt in

    a)
      account_name=$OPTARG
      ;;

    c) # AUD is the default
      journal_currency=${OPTARG}
      ;;

    e)
      # Export format transactions
      date_format="%d/%m/%Y"
      Export_Format=1
      ;;

    f) # Financial year
      financial_year=$OPTARG
      ;;

    i) # Information
   printf "mpx - Minus-Plus command line accounting and financial reporting\n\
Copyright (C) 2019  Robert Whitehurst\n\
\n\
This program is free software: you can redistribute it and/or modify\n\
it under the terms of the GNU General Public License as published by\n\
the Free Software Foundation, either version 3 of the License, or\n\
(at your option) any later version.\n\
\n\
This program is distributed in the hope that it will be useful,\n\
but WITHOUT ANY WARRANTY; without even the implied warranty of\n\
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\
GNU General Public License for more details.\n\
\n\
You should have received a copy of the GNU General Public License\n\
along with this program.  If not, see <http:#www.gnu.org/licenses/>.\n\n" >&2
      echo "$USAGE" >&2
      exit 1
      ;;

    l) # Logging / debugging
      log_function=$OPTARG
    ;;

    p) # This is a price file
      write_variables="Price"
      wfile $OPTARG
      write_file=$OPTARG
      ;;

    q) # Dividend Qualification
      qualify_window=$OPTARG
      ;;

    r) # Show reports
      Show_Reports=$OPTARG
    ;;

    s) # show all transactions
      Show_All=true
      ;;

    v) # Generalized variable selection
      write_variables="${OPTARG}"
    ;;

    w) #   Write state to this file
      wfile $OPTARG
      write_file=$OPTARG
      ;;

    x)
      Show_Extra=1
      ;;

    z)
      preprocess_only=true
      ;;

    \?)
      echo "Invalid option => $OPTARG" >&2
      echo "$USAGE" >&2
      exit 1
      ;;
    :)
      echo "$OPTARG requires an argument." >&2
      echo "$USAGE" >&2
      exit 1
      ;;
    esac
  done

  # Remove used arguments
  shift $((OPTIND-1))

  # Move to code directory
  cd "${MPXDIR}"

  # Need to check for arguments?
  # Two possible actions
  #   1) only run the preprocessor
  #   2) run the preprocessor and mpx.awk itself
  #
  # Preprocess (if its available...)
  if command -v app >/dev/null 2>&1 ; then
    app -D LOG=${log_function} -D EXPORT_FORMAT=${Export_Format} -D JOURNAL_CURRENCY=\"${journal_currency}\" p.mpx.awk > ${MPXDIR}/mpx.awk
  else
    echo >&2 "mpx warning: No preprocessor gpp found - using prebuilt mpx script."
  fi

  if [ "$preprocess_only" == "false" ]; then
    # Go back to original directory
    cd "${current_directory}"
    gawk -f ${MPXDIR}/mpx.awk -v DATE_FORMAT="${date_format}"  -v FY=${financial_year} -v Show_Account=${account_name} -v Show_All=${Show_All} -v Show_Extra=${Show_Extra} -v Show_Reports="${Show_Reports}" -v Qualification_Window=${qualify_window} -v Write_Variables=${write_variables} -v Write_State=${write_file} $@
  fi

exit 0;
